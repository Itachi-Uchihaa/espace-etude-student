rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ========== COLLECTION USERS ==========
    match /users/{userId} {
      // Permettre la création/lecture/écriture de son propre document
      allow create, read, write: if request.auth != null && request.auth.uid == userId;
      
      // Permettre la création initiale d'un document utilisateur lors de l'inscription
      // Cette règle est nécessaire pour les nouveaux utilisateurs qui n'ont pas encore de document
      allow create: if request.auth != null && 
        request.auth.uid == userId && 
        request.resource.data.role == 'student';
    }
    
    // Permettre aux admins de lire tous les users (pour dashboard admin)
    match /users/{document=**} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // ========== COLLECTION ANALYTICS_EVENTS ==========
    match /analytics_events/{eventId} {
      // Les étudiants peuvent créer des événements analytics
      allow create: if request.auth != null;
      
      // Seuls les admins peuvent lire les analytics
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // ========== COLLECTION DAILY_ACTIVITY ==========
    match /daily_activity/{document=**} {
      // Seuls les admins peuvent lire/écrire (pour dashboard admin + Cloud Functions)
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // ========== COLLECTIONS FUTURES ==========
    // Courses, subjects, exercises, etc.
    match /courses/{document=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    match /subjects/{document=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // ========== DÉFAUT : BLOQUER TOUT LE RESTE ==========
    // Toutes les autres collections sont bloquées par défaut
  }
}